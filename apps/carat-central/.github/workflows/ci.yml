name: CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/carat-central/**'
      - 'packages/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/carat-central/**'
      - 'packages/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Type check
        run: pnpm --filter @bdt/carat-central type-check
        
      - name: Lint
        run: pnpm --filter @bdt/carat-central lint
        
      - name: Format check
        run: pnpm --filter @bdt/carat-central format:check
        
      - name: Run tests
        run: pnpm --filter @bdt/carat-central test
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: apps/carat-central/coverage
          flags: carat-central
          name: carat-central-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Setup Expo CLI
        run: pnpm add -g @expo/cli
        
      - name: Build for web
        run: pnpm --filter @bdt/carat-central web
        working-directory: apps/carat-central